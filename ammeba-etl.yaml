name: ammeba-etl

volumes:
  ammeba:

services:
  extract-data:
    container_name: etl_extract_ammeba
    image: python:3.11
    user: root
    volumes:
      - ammeba:/data
    working_dir: /data
    command:
      - bash
      - -c
      - |
        set -e

        echo "Resetting dataset directory..."
        rm -rf AMMeBa-Raw
        mkdir -p AMMeBa-Raw
        cd AMMeBa-Raw

        echo "Downloading final_dataset.zip..."
        curl -L https://nyu.box.com/shared/static/liey7cih8kgori1hon6ussg4dx76wvjd \
          -o final_dataset.zip

        echo "Unzipping..."
        unzip -q final_dataset.zip
        rm -f final_dataset.zip

        echo "Listing contents of /data after extract stage:"
        ls -l /data

  transform-data:
    container_name: etl_transform_ammeba
    image: python:3.11
    volumes:
      - ammeba:/data
    working_dir: /data/AMMeBa-Raw/final_dataset
    command:
      - bash
      - -c
      - |
        set -e

        echo "Transforming AMMeBa structure to ImageFolder format..."

        pip install pandas tqdm >/dev/null

        python3 -c '
        import os
        import shutil
        import pandas as pd

        split_names = ["train", "val", "test"]
        base_dir = "/data/AMMeBa-Raw/final_dataset"
        output_base = "/data/AMMeBa-ContentManip"

        for split in split_names:
            csv_path = os.path.join(base_dir, split, "labels.csv")
            df = pd.read_csv(csv_path)

            for _, row in df.iterrows():
                filename = row["filename"]
                label = "class_1" if row["content_manipulation"] else "class_0"

                src = os.path.join(base_dir, split, "images", filename)
                dst_dir = os.path.join(output_base, split, label)
                os.makedirs(dst_dir, exist_ok=True)

                shutil.copy(src, os.path.join(dst_dir, filename))
        '

        echo "Listing transformed dataset:"
        find /data/AMMeBa-ContentManip -type d

  load-data:
    container_name: etl_load_ammeba
    image: rclone/rclone:latest
    volumes:
      - ammeba:/data
      - ~/.config/rclone/rclone.conf:/root/.config/rclone/rclone.conf:ro
    entrypoint: /bin/sh
    command:
      - -c
      - |
        if [ -z "$RCLONE_CONTAINER" ]; then
          echo "ERROR: RCLONE_CONTAINER is not set"
          exit 1
        fi

        echo "Cleaning up existing contents in remote container..."
        rclone delete chi_tacc:$RCLONE_CONTAINER --rmdirs || true

        rclone copy /data/AMMeBa-ContentManip chi_tacc:$RCLONE_CONTAINER \
        --progress \
        --transfers=32 \
        --checkers=16 \
        --multi-thread-streams=4 \
        --fast-list

        echo "Listing directories after load:"
        rclone lsd chi_tacc:$RCLONE_CONTAINER
